<?php

namespace Proxies\__CG__\projetBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class ParentEleve extends \projetBundle\Entity\ParentEleve implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;
    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;
    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__ = $cloner;
    }


    /**
     *
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', '' . "\0" . 'projetBundle\\Entity\\ParentEleve' . "\0" . 'id', '' . "\0" . 'projetBundle\\Entity\\ParentEleve' . "\0" . 'nomParent', '' . "\0" . 'projetBundle\\Entity\\ParentEleve' . "\0" . 'prenomParent', '' . "\0" . 'projetBundle\\Entity\\ParentEleve' . "\0" . 'cinParent', '' . "\0" . 'projetBundle\\Entity\\ParentEleve' . "\0" . 'numTelParent', '' . "\0" . 'projetBundle\\Entity\\ParentEleve' . "\0" . 'adresseParent', '' . "\0" . 'projetBundle\\Entity\\ParentEleve' . "\0" . 'emailParent', '' . "\0" . 'projetBundle\\Entity\\ParentEleve' . "\0" . 'loginParent', '' . "\0" . 'projetBundle\\Entity\\ParentEleve' . "\0" . 'passwordParent', '' . "\0" . 'projetBundle\\Entity\\ParentEleve' . "\0" . 'fonctionParent');
        }

        return array('__isInitialized__', '' . "\0" . 'projetBundle\\Entity\\ParentEleve' . "\0" . 'id', '' . "\0" . 'projetBundle\\Entity\\ParentEleve' . "\0" . 'nomParent', '' . "\0" . 'projetBundle\\Entity\\ParentEleve' . "\0" . 'prenomParent', '' . "\0" . 'projetBundle\\Entity\\ParentEleve' . "\0" . 'cinParent', '' . "\0" . 'projetBundle\\Entity\\ParentEleve' . "\0" . 'numTelParent', '' . "\0" . 'projetBundle\\Entity\\ParentEleve' . "\0" . 'adresseParent', '' . "\0" . 'projetBundle\\Entity\\ParentEleve' . "\0" . 'emailParent', '' . "\0" . 'projetBundle\\Entity\\ParentEleve' . "\0" . 'loginParent', '' . "\0" . 'projetBundle\\Entity\\ParentEleve' . "\0" . 'passwordParent', '' . "\0" . 'projetBundle\\Entity\\ParentEleve' . "\0" . 'fonctionParent');
    }

    /**
     *
     */
    public function __wakeup()
    {
        if (!$this->__isInitialized__) {
            $this->__initializer__ = function (ParentEleve $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if (!array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    /**
     *
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     */
    public function getEmailParent()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEmailParent', array());

        return parent::getEmailParent();
    }

    /**
     * {@inheritDoc}
     */
    public function setEmailParent($emailParent)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEmailParent', array($emailParent));

        return parent::setEmailParent($emailParent);
    }

    /**
     * {@inheritDoc}
     */
    public function getLoginParent()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLoginParent', array());

        return parent::getLoginParent();
    }

    /**
     * {@inheritDoc}
     */
    public function setLoginParent($loginParent)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLoginParent', array($loginParent));

        return parent::setLoginParent($loginParent);
    }

    /**
     * {@inheritDoc}
     */
    public function getPasswordParent()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPasswordParent', array());

        return parent::getPasswordParent();
    }

    /**
     * {@inheritDoc}
     */
    public function setPasswordParent($passwordParent)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPasswordParent', array($passwordParent));

        return parent::setPasswordParent($passwordParent);
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setNomParent($nomParent)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNomParent', array($nomParent));

        return parent::setNomParent($nomParent);
    }

    /**
     * {@inheritDoc}
     */
    public function getNomParent()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNomParent', array());

        return parent::getNomParent();
    }

    /**
     * {@inheritDoc}
     */
    public function setPrenomParent($prenomParent)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPrenomParent', array($prenomParent));

        return parent::setPrenomParent($prenomParent);
    }

    /**
     * {@inheritDoc}
     */
    public function getPrenomParent()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPrenomParent', array());

        return parent::getPrenomParent();
    }

    /**
     * {@inheritDoc}
     */
    public function setCinParent($cinParent)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCinParent', array($cinParent));

        return parent::setCinParent($cinParent);
    }

    /**
     * {@inheritDoc}
     */
    public function getCinParent()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCinParent', array());

        return parent::getCinParent();
    }

    /**
     * {@inheritDoc}
     */
    public function setNumTelParent($numTelParent)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNumTelParent', array($numTelParent));

        return parent::setNumTelParent($numTelParent);
    }

    /**
     * {@inheritDoc}
     */
    public function getNumTelParent()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNumTelParent', array());

        return parent::getNumTelParent();
    }

    /**
     * {@inheritDoc}
     */
    public function setAdresseParent($adresseParent)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAdresseParent', array($adresseParent));

        return parent::setAdresseParent($adresseParent);
    }

    /**
     * {@inheritDoc}
     */
    public function getAdresseParent()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAdresseParent', array());

        return parent::getAdresseParent();
    }

    /**
     * {@inheritDoc}
     */
    public function setFonctionParent($fonctionParent)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFonctionParent', array($fonctionParent));

        return parent::setFonctionParent($fonctionParent);
    }

    /**
     * {@inheritDoc}
     */
    public function getFonctionParent()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFonctionParent', array());

        return parent::getFonctionParent();
    }

}
